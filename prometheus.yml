global:
    scrape_interval: 15s # how often to pull metrics
    evaluation_interval: 30s # how often to evaluate rules

scrape_configs:
    # ───────────────────────────────────────────
    # 1. Prometheus scrapes itself
    # ───────────────────────────────────────────
    - job_name: prometheus
      static_configs:
          - targets: ['localhost:9090']

    # ───────────────────────────────────────────
    # 2. One target per Swarm node – Docker-daemon
    #    metrics on port 9323
    #    (enable in /etc/docker/daemon.json on
    #     every node:  "experimental":true,
    #     "metrics-addr":"0.0.0.0:9323")
    # ───────────────────────────────────────────
    - job_name: dockerd
      dockerswarm_sd_configs:
          - host: unix:///var/run/docker.sock
            role: nodes
            port: 9323 # <-- forces :9323
      relabel_configs:
          - source_labels: [__meta_dockerswarm_node_hostname]
            target_label: instance # nicer label in Prom & Grafana

    # ───────────────────────────────────────────
    # 3. node-exporter – one per node, port 9100
    # ───────────────────────────────────────────
    - job_name: node
      dockerswarm_sd_configs:
          - host: unix:///var/run/docker.sock
            role: tasks
      relabel_configs:
          # keep only node-exporter tasks
          - source_labels: [__meta_dockerswarm_service_label_prometheus_job]
            regex: node
            action: keep
          # propagate swarm meta to scraped metrics
          - source_labels: [__meta_dockerswarm_node_id]
            target_label: node_id
          - source_labels: [__meta_dockerswarm_node_hostname]
            target_label: node_name
          # use the container’s published port (9100)
          - source_labels: [__address__]
            regex: (.+):\d+
            target_label: __address__
            replacement: ${1}:9100

    # ───────────────────────────────────────────
    # 4. cAdvisor – one per node, port 8080
    # ───────────────────────────────────────────
    - job_name: cadvisor
      dockerswarm_sd_configs:
          - host: unix:///var/run/docker.sock
            role: tasks
            port: 8080 # <-- forces :8080
      relabel_configs:
          - source_labels: [__meta_dockerswarm_service_label_prometheus_job]
            regex: cadvisor
            action: keep
          - source_labels: [__meta_dockerswarm_task_address]
            target_label: instance

    # ───────────────────────────────────────────
    # 5. Catch-all: any running task that carries
    #    the label  prometheus-job=<something>
    #    (e.g. another exporter you deploy later)
    # ───────────────────────────────────────────
    - job_name: services
      dockerswarm_sd_configs:
          - host: unix:///var/run/docker.sock
            role: tasks
      relabel_configs:
          # only running tasks
          - source_labels: [__meta_dockerswarm_task_desired_state]
            regex: running
            action: keep
          # only tasks whose service has *any* prometheus-job label
          - source_labels: [__meta_dockerswarm_service_label_prometheus_job]
            regex: .+
            action: keep
          # turn that label into Prometheus “job”
          - source_labels: [__meta_dockerswarm_service_label_prometheus_job]
            target_label: job
          - source_labels: [__meta_dockerswarm_task_address]
            target_label: instance
