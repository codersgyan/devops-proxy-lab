services:
    blog-db:
        image: mysql
        deploy:
            replicas: 1
            update_config:
                order: start-first
                failure_action: rollback
                delay: 10s
            rollback_config:
                parallelism: 1
                order: start-first
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-h'
                - localhost
            interval: 10s
            timeout: 5s
            retries: 3
        environment:
            - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db_password
        volumes:
            - blog-db-vol:/var/lib/mysql
        ports:
            - '3306:3306'
        networks:
            - blog-app-net
        secrets:
            - db_password
    blog-server:
        image: codersgyan/blog-app:build-e794977dec6d5777eb93e3697b6a11ba4d0acf7c
        deploy:
            replicas: 2
            update_config:
                order: start-first
                failure_action: rollback
                delay: 10s
            rollback_config:
                parallelism: 1
                order: start-first
        healthcheck:
            test:
                - CMD
                - wget
                - '--no-verbose'
                - '--tries=1'
                - '--spider'
                - http://localhost:3000/health
            interval: 10s
            timeout: 5s
            retries: 3
        ports:
            - '3001:3000'
        environment:
            - DB_HOST=blog-db
            - DB_USER_FILE=/run/secrets/db_username
            - DB_PASSWORD_FILE=/run/secrets/db_password
            - DB_NAME=blogdb
            - NODE_HOST="{{.Node.Hostname}}"
        networks:
            - blog-app-net
        secrets:
            - db_username
            - db_password

    caddy:
        image: caddy:2-alpine
        deploy:
            replicas: 1 # One is usually enough; Caddy is stateless when /data is persisted
            update_config:
                order: start-first
                failure_action: rollback
                delay: 10s
            rollback_config:
                parallelism: 1
                order: start-first
        ports:
            - '80:80' # HTTP (ACME challenge + redirect)
            - '443:443' # HTTPS
        volumes:
            - caddy_data:/data # Certificates + OCSP cache
            - caddy_config:/config # JSON config snapshots (optional)
        networks:
            - blog-app-net
        configs:
            - source: Caddyfile # Provided below in the configs section
              target: /etc/caddy/Caddyfile
volumes:
    blog-db-vol: null
    caddy_data: null
    caddy_config: null
networks:
    blog-app-net: null
secrets:
    db_password:
        external: true
    db_username:
        external: true
configs:
    Caddyfile:
        file: ./Caddyfile
